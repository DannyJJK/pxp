[
    Statement {
        id: 2,
        kind: FullOpeningTag(
            FullOpeningTagStatement {
                span: Span {
                    start: 0,
                    end: 5,
                },
            },
        ),
        span: Span {
            start: 0,
            end: 5,
        },
        comments: CommentGroup {
            comments: [],
        },
    },
    Statement {
        id: 7,
        kind: Expression(
            ExpressionStatement {
                expression: Expression {
                    id: 6,
                    kind: StaticMethodCall(
                        StaticMethodCallExpression {
                            target: Expression {
                                id: 4,
                                kind: Identifier(
                                    SimpleIdentifier(
                                        SimpleIdentifier {
                                            id: 3,
                                            symbol: Symbol("A\B"),
                                            parts: [
                                                Symbol("A"),
                                                Symbol("B"),
                                            ],
                                            qualification: Qualified,
                                            span: Span {
                                                start: 7,
                                                end: 10,
                                            },
                                        },
                                    ),
                                ),
                                span: Span {
                                    start: 7,
                                    end: 10,
                                },
                                comments: CommentGroup {
                                    comments: [],
                                },
                            },
                            double_colon: Span {
                                start: 10,
                                end: 12,
                            },
                            method: SimpleIdentifier(
                                SimpleIdentifier {
                                    id: 5,
                                    symbol: Symbol("foo"),
                                    parts: [
                                        Symbol("foo"),
                                    ],
                                    qualification: Unqualified,
                                    span: Span {
                                        start: 12,
                                        end: 15,
                                    },
                                },
                            ),
                            arguments: ArgumentList {
                                comments: CommentGroup {
                                    comments: [],
                                },
                                left_parenthesis: Span {
                                    start: 15,
                                    end: 16,
                                },
                                arguments: [],
                                right_parenthesis: Span {
                                    start: 16,
                                    end: 17,
                                },
                            },
                        },
                    ),
                    span: Span {
                        start: 10,
                        end: 17,
                    },
                    comments: CommentGroup {
                        comments: [],
                    },
                },
                ending: Semicolon(
                    Span {
                        start: 17,
                        end: 18,
                    },
                ),
            },
        ),
        span: Span {
            start: 7,
            end: 18,
        },
        comments: CommentGroup {
            comments: [],
        },
    },
]
---
