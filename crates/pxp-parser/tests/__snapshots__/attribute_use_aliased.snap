[
    Statement {
        kind: FullOpeningTag(
            FullOpeningTagStatement {
                span: Span {
                    start: 0,
                    end: 5,
                },
            },
        ),
        span: Span {
            start: 0,
            end: 5,
        },
        comments: CommentGroup {
            comments: [],
        },
    },
    Statement {
        kind: Use(
            UseStatement {
                kind: Normal,
                uses: [
                    Use {
                        name: Name {
                            kind: Resolved(
                                ResolvedName {
                                    resolved: Symbol("Foo\Bar"),
                                    original: Symbol("Foo\Bar"),
                                },
                            ),
                            span: Span {
                                start: 11,
                                end: 18,
                            },
                        },
                        alias: Some(
                            SimpleIdentifier {
                                symbol: Symbol("Baz"),
                                span: Span {
                                    start: 22,
                                    end: 25,
                                },
                            },
                        ),
                        kind: None,
                    },
                ],
            },
        ),
        span: Span {
            start: 7,
            end: 26,
        },
        comments: CommentGroup {
            comments: [],
        },
    },
    Statement {
        kind: Class(
            ClassStatement {
                attributes: [
                    AttributeGroup {
                        span: Span {
                            start: 28,
                            end: 34,
                        },
                        members: [
                            Attribute {
                                span: Span {
                                    start: 30,
                                    end: 34,
                                },
                                name: Name {
                                    kind: Resolved(
                                        ResolvedName {
                                            resolved: Symbol("Foo\Bar"),
                                            original: Symbol("Baz"),
                                        },
                                    ),
                                    span: Span {
                                        start: 30,
                                        end: 33,
                                    },
                                },
                                arguments: None,
                            },
                        ],
                    },
                ],
                modifiers: ClassModifierGroup {
                    modifiers: [],
                },
                class: Span {
                    start: 35,
                    end: 40,
                },
                name: Name {
                    kind: Resolved(
                        ResolvedName {
                            resolved: Symbol("Qux"),
                            original: Symbol("Qux"),
                        },
                    ),
                    span: Span {
                        start: 41,
                        end: 44,
                    },
                },
                extends: None,
                implements: None,
                body: ClassBody {
                    left_brace: Span {
                        start: 45,
                        end: 46,
                    },
                    members: [],
                    right_brace: Span {
                        start: 46,
                        end: 47,
                    },
                },
            },
        ),
        span: Span {
            start: 28,
            end: 47,
        },
        comments: CommentGroup {
            comments: [],
        },
    },
]
---
